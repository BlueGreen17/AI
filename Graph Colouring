class GraphColouring:
    def __init__(self, vertices):
        self.V = vertices
        self.graph = [[] for _ in range(vertices)]

    def add_edge(self, u, v):
        self.graph[u].append(v)
        self.graph[v].append(u)

    def greedy_coloring(self):
        result = [-1] * self.V
        result[0] = 0  #Assign the 1st colour

                def is_safe(v, c):
            for i in self.graph[v]:
                if result[i] == c:
                    return False
            return True

          for u in range(1, self.V):
             for c in range(self.V):
                if is_safe(u, c):
                    result[u] = c
                    break

        return result

if __name__ == "__main__":
    # Create a graph
    g = Graph(5)
    g.add_edge(0, 1)
    g.add_edge(0, 2)
    g.add_edge(1, 2)
    g.add_edge(1, 3)
    g.add_edge(2, 3)
    g.add_edge(3, 4)

   colors = g.greedy_coloring()

    print("Vertex\tColor")
    for i in range(len(colors)):
        print(f"{i}\t{colors[i]}")

